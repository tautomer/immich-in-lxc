name: Release and Update immich

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Immich release tag to be released'
        required: true
      timestamp:
        description: 'Timestamp of the build'
        required: true
      deps_run_id:
        description: 'Dependency building workflow run ID'
        required: true
      svr_run_id:
        description: 'Server building workflow run ID'
        required: true

jobs:
  release-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating GitHub Releases
    steps:
      - name: Download dependencies artifact
        uses: actions/download-artifact@v4
        with:
          repository: ${{ github.repository }}
          github-token: ${{ secrets.ACTIONS_PAT }}
          run-id: ${{ github.event.inputs.deps_run_id }}
          name: dependencies
          path: dependencies-release

      - name: Download server artifact
        uses: actions/download-artifact@v4
        with:
          repository: ${{ github.repository }}
          github-token: ${{ secrets.ACTIONS_PAT }}
          run-id: ${{ github.event.inputs.svr_run_id }}
          name: immich-app-${{ github.event.inputs.version }}
          path: app-release
      
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.version }}
          name: immich server ${{ github.event.inputs.version }} with openvino for Ubuntu 24.04
          body: |
            This release contains the latest build of immich server:
            - Version: **${{ github.event.inputs.version }}**
            - Built on: **${{ github.event.inputs.timestamp }}**
            - Built for: Ubuntu 24.04 LTS with openvino for ML

            **How to install**:  
            - Follow the setup steps in the README up to (but not including) `pre-install.sh`.
            - Install Python 3.11 as `onnxruntime-openvino=1.18.0` was not built for Python 3.12.
              ```shell
              add-apt-repository ppa:deadsnakes/ppa
              apt update
              # venv and header files are needed as well
              apt install python3.11 python3.11-venv python3.11-dev
              ```
            - Stop the `immich-ml` and `immich-web` services: `systemctl stop immich-ml immich-web`.
            - Download `dependencies.tar.gz` and `server.tar.gz` into the home folder of your LXC.
            - Extract dependencies first with root: `tar -xf dependencies.tar.gz -C / --strip-components=1 deps/usr`. This will update the dependencies in `/usr/local`.
            - Switch to the immich user: `su - immich`.
            - Remove `/home/immich/app` and `/home/immich/geodata` folders. For safety, you can rename them first: `mv /home/immich/app /home/immich/app.old` and `mv /home/immich/geodata /home/immich/geodata.old`.
            - Extract the server tarball: `tar -xf server.tar.gz`.
            - Ensure that the `app/upload` directory is linked correctly: `ln -sf /your/upload/path /home/immich/app/upload`.
            - If necessary, manually update runtime.env or run `./post-install.sh` to install/update systemd services. Since these files generally do not change with respect to immich updates, they are not included in the tarball.
            - Restart `immich-ml` and `immich-web` services.
            - Verify that all services are running correctly: `systemctl status immich-ml immich-web`.
            - If everything is working, you can remove the old app and geodata folders: `rm -rf /home/immich/app.old /home/immich/geodata.old`.
            - If you encounter issues, you can restore the old folders: `mv /home/immich/app.old /home/immich/app` and `mv /home/immich/geodata.old /home/immich/geodata`. 

            **Release details**:  
            This release was created automatically by GitHub Actions. You can track the build process here: [GitHub Actions Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
          draft: false
          prerelease: false
          artifacts: app-release/server.tar.gz,dependencies-release/dependencies.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update LATEST_IMMICH_RELEASE variable
        run: |
          LATEST_TAG=${{ github.event.inputs.version }}
          echo "::notice file=README.md::Successfully created new release $LATEST_TAG. Updating repository variable."
          curl -X PATCH \
          -H "Authorization: token ${{ secrets.ACTIONS_PAT }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/variables/LATEST_IMMICH_RELEASE \
          -d '{"value":"'$LATEST_TAG'"}'